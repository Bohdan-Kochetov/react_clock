{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","setInterval","setState","console","log","toLocaleTimeString","name","this","props","React","Component","App","isClockVisible","clockName","viewClockHandler","setName","randomNumber","Math","round","random","nameButton","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,aACE,WACE,EAAKC,UAAS,WACZ,IAAMH,EAAO,IAAIC,KAKjB,OAFAG,QAAQC,IAAIL,EAAKM,sBAEV,CAAEN,KAAM,IAAIC,WAEpB,OAhBT,gCAoBE,YAAqC,IAAhBM,EAAe,EAAfA,KACfC,KAAKC,MAAMF,OAASA,GAE1BH,QAAQC,IAAR,qCAA0CE,EAA1C,eAAqDC,KAAKC,MAAMF,SAvBlE,oBA2BE,WACE,OACE,gDAEG,IACAC,KAAKT,MAAMC,KAAKM,4BAhCzB,GAA2BI,IAAMC,WCDpBC,G,MAAb,4MACEb,MAAe,CACbc,gBAAgB,EAChBC,UAAW,GAHf,EAMEC,iBAAmB,WACjB,IAAQF,EAAmB,EAAKd,MAAxBc,eAER,EAAKV,SAAS,CACZU,gBAAiBA,KAVvB,EAcEG,QAAU,WACR,IAAMC,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UAErC,EAAKjB,SAAS,CAAEW,UAAWG,KAjB/B,4CAoBE,WACE,MAAsCT,KAAKT,MAAnCc,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAClBO,EAAaR,EAAiB,OAAS,OAE7C,OACE,sBAAKS,UAAU,MAAf,UACE,6CACA,wBAAQC,KAAK,SAASC,QAAShB,KAAKO,iBAApC,SACGM,IAEH,wBAAQE,KAAK,SAASC,QAAShB,KAAKQ,QAApC,8BAGGH,GACE,cAAC,EAAD,CAAON,KAAMO,WAlC1B,GAAyBJ,IAAMC,YCN/Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d255c382.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  date: Date,\n}\n\ninterface Props {\n  name: number\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    setInterval(\n      () => {\n        this.setState(() => {\n          const date = new Date();\n\n          // eslint-disable-next-line no-console\n          console.log(date.toLocaleTimeString());\n\n          return { date: new Date() };\n        });\n      }, 1000,\n    );\n  }\n\n  componentDidUpdate({ name }: Props) {\n    if (this.props.name !== name) {\n    // eslint-disable-next-line\n  console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        Current time:\n        {' '}\n        {this.state.date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\ninterface State {\n  isClockVisible: boolean,\n  clockName: number\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: false,\n    clockName: 0,\n  };\n\n  viewClockHandler = () => {\n    const { isClockVisible } = this.state;\n\n    this.setState({\n      isClockVisible: !isClockVisible,\n    });\n  };\n\n  setName = () => {\n    const randomNumber = Math.round(Math.random() * 100);\n\n    this.setState({ clockName: randomNumber });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n    const nameButton = isClockVisible ? 'Show' : 'Hide';\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button type=\"button\" onClick={this.viewClockHandler}>\n          {nameButton}\n        </button>\n        <button type=\"button\" onClick={this.setName}>\n          Set random name\n        </button>\n        {(!isClockVisible)\n          && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}