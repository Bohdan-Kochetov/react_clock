{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","setInterval","tick","this","setState","props","isClockVisible","console","log","toLocaleTimeString","React","Component","App","number","clockName","active","random","randomNumber","Math","round","nameButton","className","type","onClick","name","ReactDOM","render","document","getElementById"],"mappings":"8MAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,aACE,kBAAM,EAAKC,SAAQ,OAPzB,kBAWE,WAAQ,IAAD,OACLC,KAAKC,UAAS,WACZ,IAAML,EAAO,IAAIC,KAOjB,OALM,EAAKK,MAAMC,gBAEfC,QAAQC,IAAIT,EAAKU,sBAGZ,CAAEV,KAAM,IAAIC,WApBzB,oBAwBE,WACE,OACE,gDAEG,IACAG,KAAKL,MAAMC,KAAKU,4BA7BzB,GAA2BC,IAAMC,WCDpBC,G,MAAb,4MACEd,MAAe,CACbQ,gBAAgB,EAChBO,OAAQ,EACRC,UAAW,IAJf,EAOEC,OAAS,WACP,IAAQT,EAAmB,EAAKR,MAAxBQ,eAER,EAAKF,SAAS,CACZE,gBAAiBA,KAXvB,EAeEU,OAAS,WACP,IAAMC,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKF,UAC7BH,EAAW,EAAKf,MAAhBe,OAER,EAAKT,SAAS,CAAES,OAAQI,IAExB,EAAKb,SAAS,CAAEU,UAAU,8BAAD,OAAgCD,EAAhC,eAA6CI,EAA7C,OAGzBV,QAAQC,IAAI,EAAKV,MAAMgB,YAxB3B,4CA2BE,WACE,IAAQR,EAAmBH,KAAKL,MAAxBQ,eACFc,EAAad,EAAiB,OAAS,OAE7C,OACE,sBAAKe,UAAU,MAAf,UACE,6CACA,wBAAQC,KAAK,SAASC,QAASpB,KAAKY,OAApC,SACGK,IAEH,wBAAQE,KAAK,SAASC,QAASpB,KAAKa,OAApC,8BAGGV,GACE,cAAC,EAAD,CAAOkB,KAAMrB,KAAKL,MAAMgB,UAAWR,eAAgBH,KAAKL,MAAMQ,wBAzC3E,GAAyBI,IAAMC,YCP/Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3df4d984.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  date: Date,\n}\n\ninterface Props {\n  name: string\n  isClockVisible: boolean\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    setInterval(\n      () => this.tick(), 1000,\n    );\n  }\n\n  tick() {\n    this.setState(() => {\n      const date = new Date();\n\n      if (!(this.props.isClockVisible)) {\n      // eslint-disable-next-line no-console\n        console.log(date.toLocaleTimeString());\n      }\n\n      return { date: new Date() };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        Current time:\n        {' '}\n        {this.state.date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\ninterface State {\n  isClockVisible: boolean,\n  number: number,\n  clockName: string\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: false,\n    number: 0,\n    clockName: '',\n  };\n\n  active = () => {\n    const { isClockVisible } = this.state;\n\n    this.setState({\n      isClockVisible: !isClockVisible,\n    });\n  };\n\n  random = () => {\n    const randomNumber = Math.round(Math.random() * 100);\n    const { number } = this.state;\n\n    this.setState({ number: randomNumber });\n\n    this.setState({ clockName: `The Clock was renamed from ${number} to ${randomNumber}.` });\n\n    // eslint-disable-next-line no-console\n    console.log(this.state.clockName);\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n    const nameButton = isClockVisible ? 'Show' : 'Hide';\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button type=\"button\" onClick={this.active}>\n          {nameButton}\n        </button>\n        <button type=\"button\" onClick={this.random}>\n          Set random name\n        </button>\n        {(!isClockVisible)\n          && <Clock name={this.state.clockName} isClockVisible={this.state.isClockVisible} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}